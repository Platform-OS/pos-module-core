{% comment %}
  params: @object
          @field_name
          @c
          @key[optional]
{% endcomment %}

{% liquid
  log 'Use modules/core/validations/password_complexity instead of modules/core/lib/validations/password_complexity ', type: 'DEPRECATION'
  assign decoded_pw = object.password

  function complex_password = 'modules/core/lib/queries/variable/find' name: "MODULES/CORE/USE_COMPLEX_PASSWORD", type: "boolean", context: context
  if complex_password
    assign has_lowercase = decoded_pw | matches: '[a-z]'
    unless has_lowercase
      function c = 'modules/core/lib/helpers/register_error', contract: c, field_name: 'password', key: 'modules/core/validation.password.lowercase'
    endunless

    assign has_uppercase = decoded_pw | matches: '[A-Z]'
    unless has_uppercase
      function c = 'modules/core/lib/helpers/register_error', contract: c, field_name: 'password', key: 'modules/core/validation.password.uppercase'
    endunless

    assign has_number = decoded_pw | matches: '\d'
    unless has_number
      function c = 'modules/core/lib/helpers/register_error', contract: c, field_name: 'password', key: 'modules/core/validation.password.number'
    endunless
  endif

  function c = 'modules/core/lib/validations/length', c: c, object: object, value: decoded_pw, field_name: 'password', maximum: 256, minimum: 6, message_minimum: key: 'modules/core/validation.too_short', allow_blank: null

  return c
%}
