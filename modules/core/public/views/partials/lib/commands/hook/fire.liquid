{% comment %}
  hook: string
    the hook name without hook_ prefix.
  params: object
    the object to pass to the fired hook
  merge_to_object boolean
    merge the result objects to one object or collect them in an array
{% endcomment %}
{% liquid
  if merge_to_object
    assign results = '{}' | parse_json
  else
    assign results = '[]' | parse_json
  endif

  assign hook = '/hook_' | append: hook
  function implementations = 'modules/core/lib/queries/hook/search', hook: hook

  for implementation in implementations
    function hook_result = implementation.path, params: params
    if hook_result != nil
      comment
        Check if the result is an array and merge the values one by one.
      endcomment
      if hook_result[0]
        for h_result in hook_result
          assign results = results | add_to_array: h_result
        endfor
      comment
        Check if the result is an object.
      endcomment
      elsif hook_result.first and merge_to_object
        assign results = results | hash_merge: hook_result
      else
        assign results = results | add_to_array: hook_result
      endif
    endif
  endfor

  return results
%}
